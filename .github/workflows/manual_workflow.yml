name: Test Workflow
on: 
  workflow_dispatch
jobs:
  test-stuff:
    runs-on: ubuntu-latest
    steps:
      - name: check tags
        uses: actions/github-script@v5
        continue-on-error: true
        id: check_tags
        env:
         VERSION: '${{ secrets.VERSION }}'
        with:
          script: |
            const { VERSION } = process.env
            console.log(`${VERSION}`)
            var found = false
            const output = await(github.rest.repos.listTags({
                owner: context.repo.owner,
                repo: context.repo.repo
              }))
            console.log(output.data)
            for (const tag of output.data) {
              console.log(tag.name)
              if (tag.name == `${VERSION}`) {
                found = true
                console.log("found tag")
              }
            }
            return found
      - name: print result
        run: |
          echo ${{steps.check_tags.outputs.result}}
      - name: update release draft
        id: update_draft
        if: ${{steps.check_tags.outputs.result == 'true'}}
        uses: actions/github-script@v5
        env:
         VERSION: '${{ secrets.VERSION }}'
        with:
          script: |
            const { VERSION } = process.env
            console.log("tag found, updating release draft")
            const releases = await(github.rest.repos.listReleases({
                owner: context.repo.owner,
                repo: context.repo.repo
            }))
            #console.log(releases)
            for (const rel of releases.data) {
              console.log(rel.id)
              if (rel.tag_name == `${VERSION}`) {
                console.log("matched tag")
                github.rest.repos.updateRelease({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  release_id: rel.id,
                  name: "Updated Test Release Draft",
                  draft: true,
                  body: "this is an updated test tag release draft etc."
                }) 
              }
            }
